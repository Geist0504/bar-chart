{"version":3,"sources":["bar.js","App.js","serviceWorker.js","index.js"],"names":["BarChart","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","createBarChart","bind","assertThisInitialized","width","size","height","dataCount","data","length","barWidth","node","tooltip","select","append","attr","style","overlay","xScale","scaleLinear","domain","max","d","range","yScale","yScaleAxis","xAxis","axisBottom","tickFormat","format","yAxis","axisLeft","selectAll","enter","exit","remove","i","on","transition","duration","padding","html","_this2","react_default","a","createElement","id","ref","Component","App","dataArr","forEach","val","date","split","push","console","log","Httpreq","XMLHttpRequest","open","send","json_obj","JSON","parse","responseText","cleanData","process","className","bar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5b8271fa.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport { scaleLinear } from 'd3-scale';\nimport { max } from 'd3-array';\nimport { select } from 'd3-selection';\nimport { axisBottom } from 'd3-axis';\nimport { axisLeft } from 'd3-axis';\nimport { format } from 'd3-format';\nimport { transition } from 'd3-transition';\n\nclass BarChart extends Component {\n   constructor(props){\n      super(props)\n      this.createBarChart = this.createBarChart.bind(this)\n   }\n   componentDidMount() {\n      this.createBarChart()\n   }\n   componentDidUpdate() {\n      this.createBarChart()\n   }\n   createBarChart() {\n      const width = this.props.size[0]\n      const height = this.props.size[1]\n      const containterPadding = 20\n      const dataCount = this.props.data.length\n      const barWidth = width/dataCount\n      const node = this.node\n      let tooltip = select(\".container\").append(\"div\").attr(\"id\", \"tooltip\").style(\"opacity\", 0)\n      let overlay = select(\".container\").append('div').attr('class', 'overlay').style('opacity', 0);\n      const padding = 50\n      const xScale = scaleLinear().domain([this.props.data[0][0], max(this.props.data, (d) => d[0])])\n                     .range([padding, width + padding]);\n      const yScale = scaleLinear().domain([0, max(this.props.data, (d) => d[1])])\n                    .range([0, height])\n      const yScaleAxis = scaleLinear().domain([0, max(this.props.data, (d) => d[1])])\n         .range([height, 0])\n      const xAxis = axisBottom(xScale).tickFormat(format(\"d\"));\n      const yAxis = axisLeft(yScaleAxis);\n\n   select(node)\n      .selectAll('rect')\n      .data(this.props.data)\n      .enter()\n      .append('rect')\n   \n   select(node)\n      .selectAll('rect')\n      .data(this.props.data)\n      .exit()\n      .remove()\n\n    select(node).append(\"g\").attr(\"transform\", \"translate(0, \"+ (height+containterPadding) + \")\")\n    .attr(\"id\", \"x-axis\").call(xAxis);\n   \n   select(node).append(\"g\").attr(\"transform\", \"translate(\"+ padding +\", \"+ containterPadding+\")\")\n   .attr(\"id\", \"y-axis\").call(yAxis);\n\n   select(node)\n      .selectAll('rect')\n      .data(this.props.data)\n      .style('fill', '#228b22')\n      .attr('x', (d,i) => i * width/dataCount + padding)\n      .attr('y', d => height - yScale(d[1]) + 20)\n      .attr('height', d => yScale(d[1]))\n      .attr('width', barWidth)\n      .attr('class', 'bar')\n      .attr('data-date', d => d[3][0])\n      .attr('data-gdp', d => d[1])\n      .on('mouseover', function(d,i){\n         overlay.transition()\n           .duration(0)\n           .style('height', yScale(d[1]) + 'px')\n           .style('width', barWidth + 'px')\n           .style('opacity', .9)\n           .style('left', (i * barWidth) + padding + 'px')\n           .style('top', height - yScale(d[1]) + padding*2 + 'px')\n         tooltip.transition()\n           .duration(200)\n           .style('opacity', .9)\n         tooltip.html(d[0] + ' ' + d[2] +  '<br>' + d[1] + ' Billion')\n           .attr('data-date', d[3][0])\n           .style('left', (i * barWidth) + padding * 1.5 + 'px')\n           .style('top', height - 20 + 'px')\n\n      })\n      .on('mouseout', function(d, i){\n         tooltip.transition().duration(200).style('opacity', 0)\n         overlay.transition().duration(200).style('opacity', 0);\n      })\n   }\nrender() {\n      return(\n      <div>\n         <h1 id='title'>US GDP 1947-2015</h1>\n         <svg ref={node => this.node = node}\n         width={800} height={550}>\n         </svg>\n      </div>\n      )\n   }\n}\nexport default BarChart","import React, { Component } from 'react';\nimport './App.css';\nimport BarChart from './bar'\n\n\nclass App extends Component {\n\n  process(data) {\n    let dataArr = []\n    data.forEach((val) => {\n      let date = val[0].split('-')\n      switch(date[1]){\n        case '01':\n          dataArr.push([date[0], val[1], 'Q1', val])\n          break\n        case '04':\n          dataArr.push([date[0], val[1], 'Q2', val])\n          break\n        case '07':\n          dataArr.push([date[0], val[1], 'Q3', val])\n          break\n        case '10':\n          dataArr.push([date[0], val[1], 'Q4', val])\n          break\n        default:\n          console.log('ERROR')\n      }})\n    return dataArr\n    }\n  render() {\n    var Httpreq = new XMLHttpRequest(); // a new request\n    Httpreq.open(\"GET\",'https://raw.githubusercontent.com/freeCodeCamp/ProjectReferenceData/master/GDP-data.json',false);\n    Httpreq.send(null);\n\n    var json_obj = JSON.parse(Httpreq.responseText)\n    let cleanData = (this.process(json_obj.data))\n    console.log(cleanData)\n    return (\n      <div className=\"App\">\n        <div className=\"container\">\n          <BarChart data={cleanData} size={[700,500]} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}